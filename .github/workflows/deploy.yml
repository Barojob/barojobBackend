name: Deploy To EC2 (Self-hosted)

on:
  push:
    branches:
      - 'CI/CD-Test'

jobs:
  deploy:
    runs-on: [self-hosted, linux]
    steps:

      - name: Pull latest code
        run: |
          cd /home/ubuntu/barojobBackend
          git pull origin CI/CD-Test

      - name: Clean application.yml
        run: rm -f /home/ubuntu/barojobBackend/src/main/resources/application.yml

      - name: Apply application.yml from secret
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
        run: |
          echo "$APPLICATION_PROPERTIES" > /home/ubuntu/barojobBackend/src/main/resources/application.yml

      - name: Build JAR with Gradle
        run: |
          cd /home/ubuntu/barojobBackend
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Build Docker image
        run: |
          cd /home/ubuntu/barojobBackend
          sudo docker build -t barojob-backend:latest .

      - name: Stop and remove previous app container if exists
        run: |
          CONTAINER_ID=$(sudo docker ps -aq -f name=barojob-backend)
          if [ -n "$CONTAINER_ID" ]; then
            sudo docker stop "$CONTAINER_ID"
            sudo docker rm   "$CONTAINER_ID"
          else
            echo "기존 앱 컨테이너가 없습니다."
          fi

      - name: Start Redis container
        run: |
          sudo docker pull redis:latest
          EXIST=$(sudo docker ps -aq -f name=redis-local)
          if [ -n "$EXIST" ]; then
            sudo docker stop redis-local
            sudo docker rm   redis-local
          fi
          sudo docker run -d \
            --name redis-local \
            -p 6379:6379 \
            --restart unless-stopped \
            redis:latest

      - name: Run new app container
        run: |
          sudo docker run -d \
            --name barojob-backend \
            -p 8080:8080 \
            --restart unless-stopped \
            barojob-backend:latest